[{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dtlg","title":"Contributing to dtlg","text":"outlines propose change dtlg.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to dtlg","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to dtlg","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to dtlg","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"AscentSoftware/dtlg\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to dtlg","text":"use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to dtlg","text":"Please note dtlg project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Ascent Digital Services Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help","title":"Getting help","text":"Thank using dtlg! GitHub account, please file issue question bug report. GitHub account, can contact authors package, check emails DESCRIPTION file.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/articles/benchmarks.html","id":"benchmark-data","dir":"Articles","previous_headings":"","what":"Benchmark data","title":"benchmarks","text":"","code":"adsl_large <- dtlg.data::dataset(\"adsl_large\") adsl_small <- dtlg.data::dataset(\"adsl_small\") adae <- dtlg.data::dataset(\"adae\")"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/articles/benchmarks.html","id":"benchmarking-demographics-data","dir":"Articles","previous_headings":"","what":"Benchmarking demographics data","title":"benchmarks","text":"","code":"arm_var <- \"ARM\" vars <- c(\"AGE\", \"SEX\", \"RACE\", \"ETHNIC\", \"COUNTRY\", \"DTHFL\", \"BMRKR1\",            \"REGION1\",\"BMRKR2\")  bench::mark(   tern_dmg_tab <- dtlg::tern_summary_table(adsl_large, target = vars, treat = arm_var),   dtlg_dmg_tab <- dtlg::summary_table(adsl_large, target = vars, treat = arm_var, indent = '', .total_dt = adsl_large),   iterations = 1L,   check = FALSE ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 2 × 6 #>   expression                             min median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>                          <bch:> <bch:>     <dbl> <bch:byt>    <dbl> #> 1 tern_dmg_tab <- dtlg::tern_summary…  21.9s  21.9s    0.0456    7.94GB     1.73 #> 2 dtlg_dmg_tab <- dtlg::summary_tabl…  539ms  539ms    1.86    653.73MB     1.86 dtlg::as_dtlg_table(tt = tern_dmg_tab) #>                                         stats      A: Drug X     B: Placebo #>                                        <char>         <char>         <char> #>  1:                                       AGE                               #>  2:                                         n         333924         333087 #>  3:                                 Mean (SD)     34.5 (7.1)     34.5 (7.1) #>  4:                                    Median           34.0           34.0 #>  5:                                 Min - Max    20.0 - 84.0    20.0 - 86.0 #>  6:                                       SEX                               #>  7:                                         n         333924         333087 #>  8:                                         F   173527 (52%)   173167 (52%) #>  9:                                         M   160397 (48%)   159920 (48%) #> 10:                                      RACE                               #> 11:                                         n         333924         333087 #> 12:                                     ASIAN 184009 (55.1%) 183379 (55.1%) #> 13:                 BLACK OR AFRICAN AMERICAN  76493 (22.9%)    76700 (23%) #> 14:                                     WHITE  52983 (15.9%)  52948 (15.9%) #> 15:          AMERICAN INDIAN OR ALASKA NATIVE     16823 (5%)   16435 (4.9%) #> 16:                                  MULTIPLE    1367 (0.4%)    1304 (0.4%) #> 17: NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER     978 (0.3%)    1004 (0.3%) #> 18:                                     OTHER     615 (0.2%)     693 (0.2%) #> 19:                                   UNKNOWN     656 (0.2%)     624 (0.2%) #> 20:                                    ETHNIC                               #> 21:                                         n         333924         333087 #> 22:                        HISPANIC OR LATINO    33527 (10%)   33122 (9.9%) #> 23:                    NOT HISPANIC OR LATINO   267178 (80%)   266445 (80%) #> 24:                              NOT REPORTED   19788 (5.9%)     20149 (6%) #> 25:                                   UNKNOWN     13431 (4%)     13371 (4%) #> 26:                                   COUNTRY                               #> 27:                                         n         333924         333087 #> 28:                                       CHN 168262 (50.4%) 168213 (50.5%) #> 29:                                       USA  41035 (12.3%)  40620 (12.2%) #> 30:                                       BRA   25981 (7.8%)   25698 (7.7%) #> 31:                                       PAK   26117 (7.8%)   26043 (7.8%) #> 32:                                       NGA   25230 (7.6%)   25404 (7.6%) #> 33:                                       RUS   17699 (5.3%)   17587 (5.3%) #> 34:                                       JPN   15347 (4.6%)   15475 (4.6%) #> 35:                                       GBR    8567 (2.6%)    8284 (2.5%) #> 36:                                       CAN    4738 (1.4%)    4783 (1.4%) #> 37:                                       CHE     948 (0.3%)     980 (0.3%) #> 38:                                     DTHFL                               #> 39:                                         n         333924         333087 #> 40:                                         N 278284 (83.3%) 277476 (83.3%) #> 41:                                         Y  55640 (16.7%)  55611 (16.7%) #> 42:                                    BMRKR1                               #> 43:                                         n         333924         333087 #> 44:                                 Mean (SD)      6.0 (3.5)      6.0 (3.5) #> 45:                                    Median            5.3            5.3 #> 46:                                 Min - Max     0.0 - 36.4     0.0 - 33.5 #> 47:                                   REGION1                               #> 48:                                         n         333924         333087 #> 49:                                    Africa   25230 (7.6%)   25404 (7.6%) #> 50:                                      Asia 209726 (62.8%)   209731 (63%) #> 51:                                   Eurasia   17699 (5.3%)   17587 (5.3%) #> 52:                                    Europe    8567 (2.6%)    8284 (2.5%) #> 53:                             North America  45773 (13.7%)  45403 (13.6%) #> 54:                             South America   25981 (7.8%)   25698 (7.7%) #> 55:                                   Missing     948 (0.3%)     980 (0.3%) #> 56:                                    BMRKR2                               #> 57:                                         n         333924         333087 #> 58:                                       LOW 111579 (33.4%) 111021 (33.3%) #> 59:                                    MEDIUM 111381 (33.4%) 111000 (33.3%) #> 60:                                      HIGH 110964 (33.2%) 111066 (33.3%) #>                                         stats      A: Drug X     B: Placebo #>     C: Combination #>             <char> #>  1:                #>  2:         332989 #>  3:     34.5 (7.1) #>  4:           34.0 #>  5:    20.0 - 89.0 #>  6:                #>  7:         332989 #>  8: 172556 (51.8%) #>  9: 160433 (48.2%) #> 10:                #> 11:         332989 #> 12: 183398 (55.1%) #> 13:  76367 (22.9%) #> 14:  53015 (15.9%) #> 15:     16551 (5%) #> 16:    1294 (0.4%) #> 17:    1054 (0.3%) #> 18:     644 (0.2%) #> 19:     666 (0.2%) #> 20:                #> 21:         332989 #> 22:  33604 (10.1%) #> 23:   266303 (80%) #> 24:     19896 (6%) #> 25:     13186 (4%) #> 26:                #> 27:         332989 #> 28: 168093 (50.5%) #> 29:  40864 (12.3%) #> 30:   25833 (7.8%) #> 31:   25885 (7.8%) #> 32:   25438 (7.6%) #> 33:   17359 (5.2%) #> 34:   15522 (4.7%) #> 35:    8419 (2.5%) #> 36:    4593 (1.4%) #> 37:     983 (0.3%) #> 38:                #> 39:         332989 #> 40: 277339 (83.3%) #> 41:  55650 (16.7%) #> 42:                #> 43:         332989 #> 44:      6.0 (3.5) #> 45:            5.4 #> 46:     0.0 - 34.2 #> 47:                #> 48:         332989 #> 49:   25438 (7.6%) #> 50: 209500 (62.9%) #> 51:   17359 (5.2%) #> 52:    8419 (2.5%) #> 53:  45457 (13.7%) #> 54:   25833 (7.8%) #> 55:     983 (0.3%) #> 56:                #> 57:         332989 #> 58: 110749 (33.3%) #> 59: 111125 (33.4%) #> 60: 111115 (33.4%) #>     C: Combination dtlg_dmg_tab #>                                         stats      A: Drug X     B: Placebo #>                                        <char>         <char>         <char> #>  1:                                       AGE                               #>  2:                                         n         333924         333087 #>  3:                                 Mean (SD)     34.5 (7.1)     34.5 (7.1) #>  4:                                    Median             34             34 #>  5:                                  Min, Max     20.0, 84.0     20.0, 86.0 #>  6:                                   Missing              0              0 #>  7:                                       SEX                               #>  8:                                         F 173527 (52.0%) 173167 (52.0%) #>  9:                                         M 160397 (48.0%) 159920 (48.0%) #> 10:                                      RACE                               #> 11:                                     ASIAN 184009 (55.1%) 183379 (55.1%) #> 12:                 BLACK OR AFRICAN AMERICAN  76493 (22.9%)  76700 (23.0%) #> 13:                                     WHITE  52983 (15.9%)  52948 (15.9%) #> 14:          AMERICAN INDIAN OR ALASKA NATIVE   16823 (5.0%)   16435 (4.9%) #> 15:                                  MULTIPLE    1367 (0.4%)    1304 (0.4%) #> 16: NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER     978 (0.3%)    1004 (0.3%) #> 17:                                     OTHER     615 (0.2%)     693 (0.2%) #> 18:                                   UNKNOWN     656 (0.2%)     624 (0.2%) #> 19:                                    ETHNIC                               #> 20:                        HISPANIC OR LATINO  33527 (10.0%)   33122 (9.9%) #> 21:                    NOT HISPANIC OR LATINO 267178 (80.0%) 266445 (80.0%) #> 22:                              NOT REPORTED   19788 (5.9%)   20149 (6.0%) #> 23:                                   UNKNOWN   13431 (4.0%)   13371 (4.0%) #> 24:                                   COUNTRY                               #> 25:                                       CHN 168262 (50.4%) 168213 (50.5%) #> 26:                                       USA  41035 (12.3%)  40620 (12.2%) #> 27:                                       BRA   25981 (7.8%)   25698 (7.7%) #> 28:                                       PAK   26117 (7.8%)   26043 (7.8%) #> 29:                                       NGA   25230 (7.6%)   25404 (7.6%) #> 30:                                       RUS   17699 (5.3%)   17587 (5.3%) #> 31:                                       JPN   15347 (4.6%)   15475 (4.6%) #> 32:                                       GBR    8567 (2.6%)    8284 (2.5%) #> 33:                                       CAN    4738 (1.4%)    4783 (1.4%) #> 34:                                       CHE     948 (0.3%)     980 (0.3%) #> 35:                                     DTHFL                               #> 36:                                         N 278284 (83.3%) 277476 (83.3%) #> 37:                                         Y  55640 (16.7%)  55611 (16.7%) #> 38:                                    BMRKR1                               #> 39:                                         n         333924         333087 #> 40:                                 Mean (SD)      6.0 (3.5)      6.0 (3.5) #> 41:                                    Median            5.3            5.3 #> 42:                                  Min, Max      0.0, 36.4      0.0, 33.5 #> 43:                                   Missing              0              0 #> 44:                                   REGION1                               #> 45:                                        NA     948 (0.3%)     980 (0.3%) #> 46:                                    Africa   25230 (7.6%)   25404 (7.6%) #> 47:                                      Asia 209726 (62.8%) 209731 (63.0%) #> 48:                                   Eurasia   17699 (5.3%)   17587 (5.3%) #> 49:                                    Europe    8567 (2.6%)    8284 (2.5%) #> 50:                             North America  45773 (13.7%)  45403 (13.6%) #> 51:                             South America   25981 (7.8%)   25698 (7.7%) #> 52:                                    BMRKR2                               #> 53:                                       LOW 111579 (33.4%) 111021 (33.3%) #> 54:                                    MEDIUM 111381 (33.4%) 111000 (33.3%) #> 55:                                      HIGH 110964 (33.2%) 111066 (33.3%) #>                                         stats      A: Drug X     B: Placebo #>     C: Combination #>             <char> #>  1:                #>  2:         332989 #>  3:     34.5 (7.1) #>  4:             34 #>  5:     20.0, 89.0 #>  6:              0 #>  7:                #>  8: 172556 (51.8%) #>  9: 160433 (48.2%) #> 10:                #> 11: 183398 (55.1%) #> 12:  76367 (22.9%) #> 13:  53015 (15.9%) #> 14:   16551 (5.0%) #> 15:    1294 (0.4%) #> 16:    1054 (0.3%) #> 17:     644 (0.2%) #> 18:     666 (0.2%) #> 19:                #> 20:  33604 (10.1%) #> 21: 266303 (80.0%) #> 22:   19896 (6.0%) #> 23:   13186 (4.0%) #> 24:                #> 25: 168093 (50.5%) #> 26:  40864 (12.3%) #> 27:   25833 (7.8%) #> 28:   25885 (7.8%) #> 29:   25438 (7.6%) #> 30:   17359 (5.2%) #> 31:   15522 (4.7%) #> 32:    8419 (2.5%) #> 33:    4593 (1.4%) #> 34:     983 (0.3%) #> 35:                #> 36: 277339 (83.3%) #> 37:  55650 (16.7%) #> 38:                #> 39:         332989 #> 40:      6.0 (3.5) #> 41:            5.4 #> 42:      0.0, 34.2 #> 43:              0 #> 44:                #> 45:     983 (0.3%) #> 46:   25438 (7.6%) #> 47: 209500 (62.9%) #> 48:   17359 (5.2%) #> 49:    8419 (2.5%) #> 50:  45457 (13.7%) #> 51:   25833 (7.8%) #> 52:                #> 53: 110749 (33.3%) #> 54: 111125 (33.4%) #> 55: 111115 (33.4%) #>     C: Combination"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/articles/benchmarks.html","id":"benchmarking-aet01","dir":"Articles","previous_headings":"","what":"Benchmarking AET01","title":"benchmarks","text":"","code":"arm_var <- \"ARM\" aesi_vars = c(\"FATAL\", \"SER\", \"SERWD\", \"SERDSM\", \"RELSER\",               \"WD\", \"DSM\", \"REL\", \"RELWD\", \"RELDSM\", \"SEV\")  bench::mark(      tern_safety_tab <- dtlg::tern_AET01_table(     adsl = adsl_small,     adae = aesi,     patient_var = \"USUBJID\",     treat_var = \"ARM\",     aesi_vars = aesi_vars   ),       dtlg_safety_tab <- dtlg::AET01_table(     adsl = adsl_small,     adae = aesi,     patient_var = \"USUBJID\",     treat_var = \"ARM\",     aesi_vars = aesi_vars   ),   iterations = 1L,   check = FALSE ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 2 × 6 #>   expression                             min median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>                           <bch> <bch:>     <dbl> <bch:byt>    <dbl> #> 1 tern_safety_tab <- dtlg::tern_AET01… 312ms  312ms      3.21   137.5MB     3.21 #> 2 dtlg_safety_tab <- dtlg::AET01_tabl… 150ms  150ms      6.65    26.7MB     0"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/articles/benchmarks.html","id":"benchmarking-aet02","dir":"Articles","previous_headings":"","what":"Benchmarking AET02","title":"benchmarks","text":"TODO","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Max Ebenezer-Brown. Author, maintainer. Max Norman. Author. Xinye Li. Author. Anja Peebles-Brown. Author. Ramiro Magno. Author.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ebenezer-Brown M, Norman M, Li X, Peebles-Brown , Magno R (2025). dtlg: Performance-Focused Package Clinical Trial Tables. R package version 0.0.2, https://AscentSoftware.github.io/dtlg.","code":"@Manual{,   title = {dtlg: A Performance-Focused Package for Clinical Trial Tables},   author = {Max Ebenezer-Brown and Max Norman and Xinye Li and Anja Peebles-Brown and Ramiro Magno},   year = {2025},   note = {R package version 0.0.2},   url = {https://AscentSoftware.github.io/dtlg}, }"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/index.html","id":"dtlg","dir":"","previous_headings":"","what":"A Performance-Focused Package for Clinical Trial Tables","title":"A Performance-Focused Package for Clinical Trial Tables","text":"goal dtlg create pharmaceutical tables, listings graphs use scale utilising data.table back-end processing. Currently tables can created functions encompass large number possibilities pharma tables. package created using TLGcatalog create examples. Advance formatting options follow future.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Performance-Focused Package for Clinical Trial Tables","text":"can install development version dtlg GitHub :","code":"# install.packages(\"pak\") pak::pak(\"AscentSoftware/dtlg\")"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Performance-Focused Package for Clinical Trial Tables","text":"Creating AET01 table:","code":"library(dtlg)  head(adsl[, c(\"USUBJID\", \"ARM\")]) #>                 USUBJID            ARM #> 1  AB12345-CHN-3-id-128      A: Drug X #> 2 AB12345-CHN-15-id-262 C: Combination #> 3  AB12345-RUS-3-id-378 C: Combination #> 4 AB12345-CHN-11-id-220     B: Placebo #> 5  AB12345-CHN-7-id-267     B: Placebo #> 6 AB12345-CHN-15-id-201 C: Combination  head(aesi[, c(\"USUBJID\", \"ARM\", \"FATAL\")]) #>                 USUBJID            ARM  FATAL #>                  <char>         <fctr> <lgcl> #> 1: AB12345-BRA-1-id-134      A: Drug X  FALSE #> 2: AB12345-BRA-1-id-134      A: Drug X  FALSE #> 3: AB12345-BRA-1-id-134      A: Drug X  FALSE #> 4: AB12345-BRA-1-id-134      A: Drug X   TRUE #> 5: AB12345-BRA-1-id-141 C: Combination  FALSE #> 6: AB12345-BRA-1-id-141 C: Combination  FALSE  AET01 <-   AET01_table(     adsl = adsl,     adae = aesi,     patient_var = \"USUBJID\",     treat_var = \"ARM\",     aesi_vars = c(\"FATAL\", \"SER\", \"SERWD\", \"SERDSM\", \"RELSER\",                   \"WD\", \"DSM\", \"REL\", \"RELWD\", \"RELDSM\", \"SEV\")   )  AET01[, stats := strtrim(stats, 35)][] #>                                   stats   A: Drug X B: Placebo C: Combination #>                                  <char>      <char>     <char>         <char> #>  1: Total number of patients with at le 100 (74.6%) 98 (73.1%)    103 (78.0%) #>  2:                 Total number of AEs         502        480            604 #>  3:              Total number of deaths  25 (18.7%) 23 (17.2%)     22 (16.7%) #>  4: Total number of patients withdrawn     3 (2.2%)   6 (4.5%)       5 (3.8%) #>  5: Total number of patients with at le                                       #>  6:               AE with fatal outcome    5 (3.7%)   5 (3.7%)       6 (4.5%) #>  7:                          Serious AE  85 (63.4%) 80 (59.7%)     87 (65.9%) #>  8:   Serious AE leading to withdrawal     6 (4.5%)  12 (9.0%)       9 (6.8%) #>  9:   Serious AE leading to dose modifi  36 (26.9%) 40 (29.9%)     47 (35.6%) #> 10:                  Related Serious AE  64 (47.8%) 52 (38.8%)     64 (48.5%) #> 11:   AE leading to withdrawal from tre  20 (14.9%) 24 (17.9%)     26 (19.7%) #> 12:   AE leading to dose modification/i  63 (47.0%) 70 (52.2%)     77 (58.3%) #> 13:                          Related AE  86 (64.2%) 85 (63.4%)     92 (69.7%) #> 14:   Related AE leading to withdrawal    10 (7.5%)   9 (6.7%)      12 (9.1%) #> 15:   Related AE leading to dose modifi  44 (32.8%) 44 (32.8%)     51 (38.6%) #> 16:   Severe AE (at greatest intensity)  77 (57.5%) 70 (52.2%)     79 (59.8%)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET01_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Core Safety Tables for Clinical Study Reports — AET01_table","title":"Generate Core Safety Tables for Clinical Study Reports — AET01_table","text":"AET01_table() produces combines main safety summary tables typically found Section 14.3.1 Clinical Study Report (CSR). calculates patient counts event totals deaths, AE-related withdrawals, total AEs, adverse events special interest (AESIs).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET01_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Core Safety Tables for Clinical Study Reports — AET01_table","text":"","code":"AET01_table(   adsl,   adae,   patient_var,   treat_var,   aesi_vars,   aesi_heading = \"Total number of patients with at least one\",   indent = \"  \" )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET01_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Core Safety Tables for Clinical Study Reports — AET01_table","text":"adsl subject-level dataset (typically ADaM ADSL). adae dataset adverse events, preprocessed AESI flags. patient_var string indicating subject identifier variable (e.g., \"USUBJID\"). treat_var string indicating treatment arm variable (e.g., \"ARM\"). aesi_vars character vector binary AESI flags adae. aesi_heading Optional character string used heading AESI block. indent string used indent AESI row labels (default 2 spaces).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET01_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Core Safety Tables for Clinical Study Reports — AET01_table","text":"merged data.table summarising main safety outcomes.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET01_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Core Safety Tables for Clinical Study Reports — AET01_table","text":"","code":"AET01_summary <- AET01_table(   adsl = adsl,   adae = aesi,   patient_var = \"USUBJID\",   treat_var = \"ARM\",   aesi_vars = c(\"FATAL\", \"SER\", \"SERWD\", \"SERDSM\", \"RELSER\",                 \"WD\", \"DSM\", \"REL\", \"RELWD\", \"RELDSM\", \"SEV\") ) print(AET01_summary) #>                                                          stats   A: Drug X #>                                                         <char>      <char> #>  1:              Total number of patients with at least one AE 100 (74.6%) #>  2:                                        Total number of AEs         502 #>  3:                                     Total number of deaths  25 (18.7%) #>  4: Total number of patients withdrawn from study due to an AE    3 (2.2%) #>  5:                 Total number of patients with at least one             #>  6:                                      AE with fatal outcome    5 (3.7%) #>  7:                                                 Serious AE  85 (63.4%) #>  8:            Serious AE leading to withdrawal from treatment    6 (4.5%) #>  9:       Serious AE leading to dose modification/interruption  36 (26.9%) #> 10:                                         Related Serious AE  64 (47.8%) #> 11:                    AE leading to withdrawal from treatment  20 (14.9%) #> 12:               AE leading to dose modification/interruption  63 (47.0%) #> 13:                                                 Related AE  86 (64.2%) #> 14:            Related AE leading to withdrawal from treatment   10 (7.5%) #> 15:       Related AE leading to dose modification/interruption  44 (32.8%) #> 16:                          Severe AE (at greatest intensity)  77 (57.5%) #>     B: Placebo C: Combination #>         <char>         <char> #>  1: 98 (73.1%)    103 (78.0%) #>  2:        480            604 #>  3: 23 (17.2%)     22 (16.7%) #>  4:   6 (4.5%)       5 (3.8%) #>  5:                           #>  6:   5 (3.7%)       6 (4.5%) #>  7: 80 (59.7%)     87 (65.9%) #>  8:  12 (9.0%)       9 (6.8%) #>  9: 40 (29.9%)     47 (35.6%) #> 10: 52 (38.8%)     64 (48.5%) #> 11: 24 (17.9%)     26 (19.7%) #> 12: 70 (52.2%)     77 (58.3%) #> 13: 85 (63.4%)     92 (69.7%) #> 14:   9 (6.7%)      12 (9.1%) #> 15: 44 (32.8%)     51 (38.6%) #> 16: 70 (52.2%)     79 (59.8%)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET02_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create AET02-style AE summary table — AET02_table","title":"Create AET02-style AE summary table — AET02_table","text":"Summarises adverse events format similar AET02 table CSR, showing total AE counts, patients AEs, breakdown System Organ Class (SOC) Preferred Term (PT).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET02_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create AET02-style AE summary table — AET02_table","text":"","code":"AET02_table(   adsl,   adae,   patient,   treat,   target = \"AEDECOD\",   rows_by = \"AEBODSYS\",   indent = nbsp(n = 4L) )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET02_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create AET02-style AE summary table — AET02_table","text":"adsl Subject-level dataset. adae Adverse event dataset. patient Unique subject identifier variable. treat Treatment arm variable. target Preferred term variable grouping (default: \"AEDECOD\"). rows_by Higher-level term nesting (default: \"AEBODSYS\"). indent Character string indent nested rows (default: 4 non-breaking spaces).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET02_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create AET02-style AE summary table — AET02_table","text":"merged data.table containing AE summary.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/AET02_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create AET02-style AE summary table — AET02_table","text":"","code":"# Create a AET02 table AET02_table(   adsl = adsl,   adae = aesi,   patient = \"USUBJID\",   treat = \"ARM\",   target = \"AEDECOD\",   rows_by = \"AEBODSYS\",   indent = \"  \" ) #>                                                stats   A: Drug X B: Placebo #>                                               <char>      <char>     <char> #>  1:    Total number of patients with at least one AE 100 (74.6%) 98 (73.1%) #>  2:                              Total number of AEs         502        480 #>  3:                                           cl B.2                        #>  4:                                    dcd B.2.1.2.1  52 (38.8%) 51 (38.1%) #>  5:                                    dcd B.2.2.3.1  50 (37.3%) 55 (41.0%) #>  6:                           Total number of events         102        106 #>  7: Total number of patients with at least one event  62 (46.3%) 56 (41.8%) #>  8:                                           cl D.1                        #>  9:                                    dcd D.1.1.1.1  52 (38.8%) 40 (29.9%) #> 10:                                    dcd D.1.1.4.2  54 (40.3%) 44 (32.8%) #> 11:                           Total number of events         106         84 #> 12: Total number of patients with at least one event  64 (47.8%) 54 (40.3%) #> 13:                                           cl A.1                        #> 14:                                    dcd A.1.1.1.1  57 (42.5%) 43 (32.1%) #> 15:                                    dcd A.1.1.1.2  58 (43.3%) 56 (41.8%) #> 16:                           Total number of events         115         99 #> 17: Total number of patients with at least one event  68 (50.7%) 58 (43.3%) #> 18:                                           cl D.2                        #> 19:                                    dcd D.2.1.5.3  49 (36.6%) 57 (42.5%) #> 20:                           Total number of events          49         57 #> 21: Total number of patients with at least one event  37 (27.6%) 46 (34.3%) #> 22:                                           cl B.1                        #> 23:                                    dcd B.1.1.1.1  44 (32.8%) 43 (32.1%) #> 24:                           Total number of events          44         43 #> 25: Total number of patients with at least one event  38 (28.4%) 37 (27.6%) #> 26:                                           cl C.2                        #> 27:                                    dcd C.2.1.2.1  39 (29.1%) 40 (29.9%) #> 28:                           Total number of events          39         40 #> 29: Total number of patients with at least one event  28 (20.9%) 36 (26.9%) #> 30:                                           cl C.1                        #> 31:                                    dcd C.1.1.1.3  47 (35.1%) 51 (38.1%) #> 32:                           Total number of events          47         51 #> 33: Total number of patients with at least one event  36 (26.9%) 34 (25.4%) #>                                                stats   A: Drug X B: Placebo #>     C: Combination #>             <char> #>  1:    103 (78.0%) #>  2:            604 #>  3:                #>  4:     59 (44.7%) #>  5:     68 (51.5%) #>  6:            127 #>  7:     74 (56.1%) #>  8:                #>  9:     64 (48.5%) #> 10:     50 (37.9%) #> 11:            114 #> 12:     68 (51.5%) #> 13:                #> 14:     74 (56.1%) #> 15:     63 (47.7%) #> 16:            137 #> 17:     76 (57.6%) #> 18:                #> 19:     65 (49.2%) #> 20:             65 #> 21:     50 (37.9%) #> 22:                #> 23:     50 (37.9%) #> 24:             50 #> 25:     36 (27.3%) #> 26:                #> 27:     57 (43.2%) #> 28:             57 #> 29:     48 (36.4%) #> 30:                #> 31:     54 (40.9%) #> 32:             54 #> 33:     36 (27.3%) #>     C: Combination"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adae.html","id":null,"dir":"Reference","previous_headings":"","what":"Adverse Event Analysis Dataset example dataset — adae","title":"Adverse Event Analysis Dataset example dataset — adae","text":"adae re-export random.cdisc.data::cadae dataset, included {dtlg} function usage illustration testing.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adverse Event Analysis Dataset example dataset — adae","text":"","code":"adae"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adae.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Adverse Event Analysis Dataset example dataset — adae","text":"object class tbl_df (inherits tbl, data.frame) 1934 rows 92 columns.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adlb.html","id":null,"dir":"Reference","previous_headings":"","what":"ADaM Basic Data Structure (BDS) example dataset — adlb","title":"ADaM Basic Data Structure (BDS) example dataset — adlb","text":"adlb re-export random.cdisc.data::cadlb dataset, included {dtlg} function usage illustration testing.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adlb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADaM Basic Data Structure (BDS) example dataset — adlb","text":"","code":"adlb"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adlb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ADaM Basic Data Structure (BDS) example dataset — adlb","text":"object class data.table (inherits data.frame) 8400 rows 102 columns.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Subject-Level Analysis Dataset (ADSL) example dataset — adsl","title":"Subject-Level Analysis Dataset (ADSL) example dataset — adsl","text":"adsl re-export random.cdisc.data::cadsl dataset, included {dtlg} function usage illustration testing.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subject-Level Analysis Dataset (ADSL) example dataset — adsl","text":"","code":"adsl"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/adsl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subject-Level Analysis Dataset (ADSL) example dataset — adsl","text":"object class tbl_df (inherits tbl, data.frame) 400 rows 55 columns.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/aesi.html","id":null,"dir":"Reference","previous_headings":"","what":"Adverse Events of Special Interest (AESI) example dataset — aesi","title":"Adverse Events of Special Interest (AESI) example dataset — aesi","text":"aesi modified version random.cdisc.data::cadae dataset, filtered include analysis-flagged records (ANL01FL == \"Y\") extended binary indicator variables corresponding adverse events special interest (AESIs).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/aesi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adverse Events of Special Interest (AESI) example dataset — aesi","text":"","code":"aesi"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/aesi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Adverse Events of Special Interest (AESI) example dataset — aesi","text":"data.frame subset rows cadae additional derived columns including: FATAL Logical flag fatal AEs (AESDTH == \"Y\"). SEV Logical flag severe AEs (AESEV == \"SEVERE\"). SER Logical flag serious AEs (AESER == \"Y\"). SERWD Serious AE leading withdrawal (AESER == \"Y\" & AEACN == \"DRUG WITHDRAWN\"). SERDSM Serious AE leading dose modification/interruption. RELSER Serious related AE. WD AE leading withdrawal. DSM AE leading dose modification/interruption. REL Related AE. RELWD Related AE leading withdrawal. RELDSM Related AE leading dose modification/interruption.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/aesi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adverse Events of Special Interest (AESI) example dataset — aesi","text":"derived flags include seriousness, severity, fatality, relatedness, treatment consequence (e.g., dose modification withdrawal), used illustrate key safety summaries clinical reporting. derived variable labeled using with_label() compatibility tabulation functions. dataset included {dtlg} support function testing, usage examples, reproducible safety analyses.","code":""},{"path":[]},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/as_dtlg_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a TableTree to a dtlg table — as_dtlg_table","title":"Convert a TableTree to a dtlg table — as_dtlg_table","text":"as_dtlg_table() reformats TableTree object format close dtlg's data.table.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/as_dtlg_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a TableTree to a dtlg table — as_dtlg_table","text":"","code":"as_dtlg_table(tt, .label_col = \"stats\")"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/as_dtlg_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a TableTree to a dtlg table — as_dtlg_table","text":"tt TableTree object. Typically obtained tern_summary_table(). .label_col Label stats' column.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/as_dtlg_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a TableTree to a dtlg table — as_dtlg_table","text":"","code":"vars <- c('AGE', 'RACE', 'ETHNIC', 'BMRKR1') var_labels <- c(\"Age (yr)\", \"Race\", \"Ethnicity\", \"Continuous Level Biomarker 1\")  # Summary statistics table split by ARM with custom labels. (tt <- tern_summary_table(   adsl,   target = vars,   treat = 'ARM',   target_name = var_labels )) #> Registered S3 method overwritten by 'tern': #>   method   from  #>   tidy.glm broom #>                                                A: Drug X    B: Placebo    C: Combination #>                                                 (N=134)       (N=134)        (N=132)     #> ———————————————————————————————————————————————————————————————————————————————————————— #> Age (yr)                                                                                 #>   n                                               134           134            132       #>   Mean (SD)                                   33.8 (6.6)    35.4 (7.9)      35.4 (7.7)   #>   Median                                         33.0          35.0            35.0      #>   Min - Max                                   21.0 - 50.0   21.0 - 62.0    20.0 - 69.0   #> Race                                                                                     #>   n                                               134           134            132       #>   ASIAN                                       68 (50.7%)     67 (50%)       73 (55.3%)   #>   BLACK OR AFRICAN AMERICAN                   31 (23.1%)    28 (20.9%)      32 (24.2%)   #>   WHITE                                       27 (20.1%)    26 (19.4%)      21 (15.9%)   #>   AMERICAN INDIAN OR ALASKA NATIVE              8 (6%)       11 (8.2%)       6 (4.5%)    #>   MULTIPLE                                         0         1 (0.7%)           0        #>   NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER        0         1 (0.7%)           0        #>   OTHER                                            0             0              0        #>   UNKNOWN                                          0             0              0        #> Ethnicity                                                                                #>   n                                               134           134            132       #>   HISPANIC OR LATINO                          15 (11.2%)    18 (13.4%)      15 (11.4%)   #>   NOT HISPANIC OR LATINO                      104 (77.6%)   103 (76.9%)    101 (76.5%)   #>   NOT REPORTED                                 6 (4.5%)      10 (7.5%)      11 (8.3%)    #>   UNKNOWN                                      9 (6.7%)      3 (2.2%)        5 (3.8%)    #> Continuous Level Biomarker 1                                                             #>   n                                               134           134            132       #>   Mean (SD)                                    6.0 (3.6)     5.7 (3.3)      5.6 (3.5)    #>   Median                                          5.4           4.8            4.6       #>   Min - Max                                   0.4 - 17.7    0.6 - 14.2      0.2 - 21.4    # Format as a dtlg table as_dtlg_table(tt) #>                                         stats   A: Drug X  B: Placebo #>                                        <char>      <char>      <char> #>  1:                                  Age (yr)                         #>  2:                                         n         134         134 #>  3:                                 Mean (SD)  33.8 (6.6)  35.4 (7.9) #>  4:                                    Median        33.0        35.0 #>  5:                                 Min - Max 21.0 - 50.0 21.0 - 62.0 #>  6:                                      Race                         #>  7:                                         n         134         134 #>  8:                                     ASIAN  68 (50.7%)    67 (50%) #>  9:                 BLACK OR AFRICAN AMERICAN  31 (23.1%)  28 (20.9%) #> 10:                                     WHITE  27 (20.1%)  26 (19.4%) #> 11:          AMERICAN INDIAN OR ALASKA NATIVE      8 (6%)   11 (8.2%) #> 12:                                  MULTIPLE           0    1 (0.7%) #> 13: NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER           0    1 (0.7%) #> 14:                                     OTHER           0           0 #> 15:                                   UNKNOWN           0           0 #> 16:                                 Ethnicity                         #> 17:                                         n         134         134 #> 18:                        HISPANIC OR LATINO  15 (11.2%)  18 (13.4%) #> 19:                    NOT HISPANIC OR LATINO 104 (77.6%) 103 (76.9%) #> 20:                              NOT REPORTED    6 (4.5%)   10 (7.5%) #> 21:                                   UNKNOWN    9 (6.7%)    3 (2.2%) #> 22:              Continuous Level Biomarker 1                         #> 23:                                         n         134         134 #> 24:                                 Mean (SD)   6.0 (3.6)   5.7 (3.3) #> 25:                                    Median         5.4         4.8 #> 26:                                 Min - Max  0.4 - 17.7  0.6 - 14.2 #>                                         stats   A: Drug X  B: Placebo #>     C: Combination #>             <char> #>  1:                #>  2:            132 #>  3:     35.4 (7.7) #>  4:           35.0 #>  5:    20.0 - 69.0 #>  6:                #>  7:            132 #>  8:     73 (55.3%) #>  9:     32 (24.2%) #> 10:     21 (15.9%) #> 11:       6 (4.5%) #> 12:              0 #> 13:              0 #> 14:              0 #> 15:              0 #> 16:                #> 17:            132 #> 18:     15 (11.4%) #> 19:    101 (76.5%) #> 20:      11 (8.3%) #> 21:       5 (3.8%) #> 22:                #> 23:            132 #> 24:      5.6 (3.5) #> 25:            4.6 #> 26:     0.2 - 21.4 #>     C: Combination"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate counts of a categorical variable — calc_counts","title":"Calculate counts of a categorical variable — calc_counts","text":"calc_counts() counts observations categorical variable (target) another (treat) reports summary statistics clinical trial reporting format.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate counts of a categorical variable — calc_counts","text":"","code":"calc_counts(   dt,   target,   target_name = target,   treat,   indent = nbsp(n = 4L),   .total_dt = NULL,   pct_dec = 1 )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate counts of a categorical variable — calc_counts","text":"dt data.frame containing, least, variables indicated target treat. target Target variable passed string summary statistics calculated. target_name Heading target variable string. Defaults target. treat string indicating grouping variable, e.g. variable specifying treatment population. indent string used indentation summary statistics labels. Defaults four HTML non-breaking spaces (&nbsp;). .total_dt Separate table dt derive total counts per group. pct_dec argument ignored, kept backward compatibility reasons.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate counts of a categorical variable — calc_counts","text":"list containing data.table formatted follows: First column named stats contains target variable name indicated target first row. Subsequent rows contain levels target. columns levels grouping variable (treat). columns character type. table structured easy integration Shiny output widgets.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate counts of a categorical variable — calc_counts","text":"","code":"calc_counts(dt = adsl, \"RACE\", treat = \"ARM\") #> [[1]] #>                                                                stats A: Drug X #>                                                               <char>    <char> #> 1:                                                              RACE           #> 2:                                     &nbsp;&nbsp;&nbsp;&nbsp;ASIAN        68 #> 3:                 &nbsp;&nbsp;&nbsp;&nbsp;BLACK OR AFRICAN AMERICAN        31 #> 4:                                     &nbsp;&nbsp;&nbsp;&nbsp;WHITE        27 #> 5:          &nbsp;&nbsp;&nbsp;&nbsp;AMERICAN INDIAN OR ALASKA NATIVE         8 #> 6:                                  &nbsp;&nbsp;&nbsp;&nbsp;MULTIPLE         0 #> 7: &nbsp;&nbsp;&nbsp;&nbsp;NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER         0 #>    B: Placebo C: Combination #>        <char>         <char> #> 1:                           #> 2:         67             73 #> 3:         28             32 #> 4:         26             21 #> 5:         11              6 #> 6:          1              0 #> 7:          1              0 #>"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate descriptive summary statistics for a numeric variable — calc_desc","title":"Calculate descriptive summary statistics for a numeric variable — calc_desc","text":"calc_desc() summarises numeric variable (target) another (treat) reports summary statistics clinical trial reporting format. following statistics calculated target, per group, .e. variable treat levels: n: number observations Mean (SD): mean standard deviation target Median: median target Min, Max: minimum maximum target Missing: number missing target values","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate descriptive summary statistics for a numeric variable — calc_desc","text":"","code":"calc_desc(   dt,   target,   target_name = target,   treat,   indent = nbsp(n = 4L),   pct_dec = 1 )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate descriptive summary statistics for a numeric variable — calc_desc","text":"dt data.frame containing, least, variables indicated target treat. target Target variable passed string summary statistics calculated. target_name Heading target variable string. Defaults target. treat string indicating grouping variable, e.g. variable specifying treatment population. indent string used indentation summary statistics labels. Defaults four HTML non-breaking spaces (&nbsp;). pct_dec Decimal places reported figures.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_desc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate descriptive summary statistics for a numeric variable — calc_desc","text":"list containing data.table formatted follows: First column named stats contains target variable name indicated target first row. Subsequent rows contain summarised statistics labels. columns levels grouping variable (treat). columns character type. table structured easy integration Shiny output widgets.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate descriptive summary statistics for a numeric variable — calc_desc","text":"","code":"# Calculate summary statistics for the age of the subjects in each region. calc_stats(dt = adsl, \"AGE\", treat = \"REGION1\") #> [[1]] #>                                stats     Africa       Asia    Eurasia #>                               <char>     <char>     <char>     <char> #> 1:                               AGE                                  #> 2:         &nbsp;&nbsp;&nbsp;&nbsp;n         26        268         19 #> 3: &nbsp;&nbsp;&nbsp;&nbsp;Mean (SD) 32.3 (7.7) 34.6 (6.9) 35.9 (8.3) #> 4:    &nbsp;&nbsp;&nbsp;&nbsp;Median         31         34         36 #> 5:  &nbsp;&nbsp;&nbsp;&nbsp;Min, Max 20.0, 50.0 21.0, 58.0 25.0, 58.0 #> 6:   &nbsp;&nbsp;&nbsp;&nbsp;Missing          0          0          0 #>         Europe North America South America #>         <char>        <char>        <char> #> 1:                                         #> 2:           9            48            30 #> 3: 38.4 (16.1)    36.2 (6.8)    36.1 (8.1) #> 4:          30            35          35.5 #> 5:  26.0, 69.0    24.0, 57.0    24.0, 64.0 #> 6:           0             0             0 #>   # Calculate summary statistics for biomarker 1 in each of the three arms # (`ARM`). calc_stats(dt = adsl, \"BMRKR1\", treat = \"ARM\") #> [[1]] #>                                stats A: Drug X B: Placebo C: Combination #>                               <char>    <char>     <char>         <char> #> 1:                            BMRKR1                                     #> 2:         &nbsp;&nbsp;&nbsp;&nbsp;n       134        134            132 #> 3: &nbsp;&nbsp;&nbsp;&nbsp;Mean (SD) 6.0 (3.6)  5.7 (3.3)      5.6 (3.5) #> 4:    &nbsp;&nbsp;&nbsp;&nbsp;Median       5.4        4.8            4.6 #> 5:  &nbsp;&nbsp;&nbsp;&nbsp;Min, Max 0.4, 17.7  0.6, 14.2      0.2, 21.4 #> 6:   &nbsp;&nbsp;&nbsp;&nbsp;Missing         0          0              0 #>"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate summary statistics for a variable — calc_stats","title":"Calculate summary statistics for a variable — calc_stats","text":"calc_stats() calculates summary statistics variable groups. generic function; note dispatches based class target (second argument), dt (first argument).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate summary statistics for a variable — calc_stats","text":"","code":"calc_stats(   dt,   target,   target_name = target,   treat,   indent = nbsp(n = 4L),   .total_dt = NULL,   pct_dec = 1 )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate summary statistics for a variable — calc_stats","text":"dt data.frame containing, least, variables indicated target treat. target Target variable passed string summary statistics calculated. target_name Heading target variable string. Defaults target. treat string indicating grouping variable, e.g. variable specifying treatment population. indent string used indentation summary statistics labels. Defaults four HTML non-breaking spaces (&nbsp;). .total_dt Separate table dt derive total counts per group. pct_dec Decimal places reported figures.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate summary statistics for a variable — calc_stats","text":"data.table summary statistics. format depends type target variable: target variable categorical, .e. type character, factor logical output calc_counts(). target variable numeric, output calc_desc().","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/calc_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate summary statistics for a variable — calc_stats","text":"","code":"# Calculate summary statistics of a numeric variable, e.g. `AGE`. calc_stats(dt = adsl, \"AGE\", treat = \"ARM\") #> [[1]] #>                                stats  A: Drug X B: Placebo C: Combination #>                               <char>     <char>     <char>         <char> #> 1:                               AGE                                      #> 2:         &nbsp;&nbsp;&nbsp;&nbsp;n        134        134            132 #> 3: &nbsp;&nbsp;&nbsp;&nbsp;Mean (SD) 33.8 (6.6) 35.4 (7.9)     35.4 (7.7) #> 4:    &nbsp;&nbsp;&nbsp;&nbsp;Median         33         35             35 #> 5:  &nbsp;&nbsp;&nbsp;&nbsp;Min, Max 21.0, 50.0 21.0, 62.0     20.0, 69.0 #> 6:   &nbsp;&nbsp;&nbsp;&nbsp;Missing          0          0              0 #>   # Calculate summary statistics of a categorical variable, e.g. `SEX`. calc_stats(dt = adsl, \"SEX\", treat = \"ARM\") #> [[1]] #>                        stats A: Drug X B: Placebo C: Combination #>                       <char>    <char>     <char>         <char> #> 1:                       SEX                                     #> 2: &nbsp;&nbsp;&nbsp;&nbsp;F        79         82             70 #> 3: &nbsp;&nbsp;&nbsp;&nbsp;M        55         52             62 #>"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/cross_tab_to_obsv_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a contingency table to a long-format observation-level data frame — cross_tab_to_obsv_tab","title":"Convert a contingency table to a long-format observation-level data frame — cross_tab_to_obsv_tab","text":"cross_tab_to_obsv_tab() expands contingency table matrix counts long-format data frame row represents one observation. output contains one column per dimension input, repeated rows according frequency counts.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/cross_tab_to_obsv_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a contingency table to a long-format observation-level data frame — cross_tab_to_obsv_tab","text":"","code":"cross_tab_to_obsv_tab(cross_tab, strings_as_factors = TRUE)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/cross_tab_to_obsv_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a contingency table to a long-format observation-level data frame — cross_tab_to_obsv_tab","text":"cross_tab two-way multi-way contingency table (matrix table) named dimnames. combination factor levels assumed represent count occurrences. strings_as_factors character columns output converted factors?","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/cross_tab_to_obsv_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a contingency table to a long-format observation-level data frame — cross_tab_to_obsv_tab","text":"data.frame long format one row per implied observation one column per dimension input table.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/cross_tab_to_obsv_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a contingency table to a long-format observation-level data frame — cross_tab_to_obsv_tab","text":"","code":"dim_names <- list(Sex = c(\"Male\", \"Female\"),                   Response = c(\"Yes\", \"No\")) cross_tab <- matrix(c(2, 1, 3, 4), nrow = 2, dimnames = dim_names) cross_tab_to_obsv_tab(cross_tab) #>       Sex Response #> 1    Male      Yes #> 2    Male      Yes #> 3  Female      Yes #> 4    Male       No #> 5    Male       No #> 6    Male       No #> 7  Female       No #> 8  Female       No #> 9  Female       No #> 10 Female       No"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/dtlg-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dtlg: A Performance-Focused Package for Clinical Trial Tables — dtlg-package","title":"dtlg: A Performance-Focused Package for Clinical Trial Tables — dtlg-package","text":"package main goal create pharmaceutical tables using data.table backend.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/dtlg-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dtlg: A Performance-Focused Package for Clinical Trial Tables — dtlg-package","text":"Maintainer: Max Ebenezer-Brown max.ebenezer-brown@ascent.io Authors: Max Norman max.norman@ascent.io Xinye Li xinye.li@ascent.io Anja Peebles-Brown anna.peebles-brown@ascent.io Ramiro Magno ramiro.morgado@ascent.io","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count events — event_count","title":"Count events — event_count","text":"event_count() counts events defined predicate expressions passed .filters.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count events — event_count","text":"","code":"event_count(   dt,   patient,   treat,   label,   .filters = NULL,   .total_dt = dt,   pct_dec = 1 )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count events — event_count","text":"dt data.frame containing, least, variables indicated target treat. patient string indicating subject identifying variable. treat string indicating grouping variable, e.g. variable specifying treatment population. label string used label output reporting table. text descriptive event counted. .filters Predicate expressions identifying events dt. Argument passed character vector expressions evaluated frame dt. .total_dt Separate table dt derive total counts per group. pct_dec argument ignored, kept backward compatibility reasons.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count events — event_count","text":"","code":"# Count deaths per arm. event_count(   adsl,   patient = \"USUBJID\",   treat = \"ARM\",   label = \"Total number of deaths\",   .filters = \"DTHFL == 'Y'\" ) #> [[1]] #>                     stats  A: Drug X B: Placebo C: Combination #>                    <char>     <char>     <char>         <char> #> 1: Total number of deaths 25 (18.7%) 23 (17.2%)     22 (16.7%) #>   # Count patients withdraw from study due to an adverse event. withdrawn_lbl <- \"Total number of patients withdrawn from study due to an AE\" event_count(   adsl,   patient = \"USUBJID\",   treat = \"ARM\",   label = withdrawn_lbl,   .filters = \"DCSREAS == 'ADVERSE EVENT'\" ) #> [[1]] #>                                                         stats A: Drug X #>                                                        <char>    <char> #> 1: Total number of patients withdrawn from study due to an AE  3 (2.2%) #>    B: Placebo C: Combination #>        <char>         <char> #> 1:   6 (4.5%)       5 (3.8%) #>   # Count patients with at least one adverse event. # NB: When `.filters` is `NULL` (i.e., omitted), all records in `dt` are used # for counting events. event_count(   adae,   patient = \"USUBJID\",   treat = \"ARM\",   label = \"Total number of patients with at least one AE\",   .filters = \"ANL01FL == 'Y'\",   .total_dt = adsl ) #> [[1]] #>                                            stats   A: Drug X B: Placebo #>                                           <char>      <char>     <char> #> 1: Total number of patients with at least one AE 100 (74.6%) 98 (73.1%) #>    C: Combination #>            <char> #> 1:    103 (78.0%) #>"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise adverse events by arm and other grouping variables — event_count_by","title":"Summarise adverse events by arm and other grouping variables — event_count_by","text":"event_count_by() creates tabular summary adverse events grouped higher-level classification variable (e.g., system organ class), counts number events number unique patients per treatment arm.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise adverse events by arm and other grouping variables — event_count_by","text":"","code":"event_count_by(   dt,   patient,   treat,   rows_by,   target,   .total_dt = dt,   indent = nbsp(n = 4L),   pct_dec = 1 )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise adverse events by arm and other grouping variables — event_count_by","text":"dt data.frame data.table containing adverse event data patient-level identifiers. patient string giving name patient identifier variable (e.g., \"USUBJID\"). treat string giving name treatment arm variable (e.g., \"ARM\"). rows_by string giving name grouping variable (e.g., \"AEBODSYS\" body system). target string giving name variable report within group (e.g., \"AEDECOD\" preferred term). .total_dt data.frame data.table containing denominator population. Defaults dt. indent string used indent row labels (e.g., \"  \" nbsp(n = 4L)). pct_dec Integer. Number decimal places show percentages. Defaults 1.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise adverse events by arm and other grouping variables — event_count_by","text":"data.table following structure: One row per combination rows_by target One row per group total (Total number events) One row per patient-level total (Total number patients least one event) Columns include: stats: character column labels one column per level treat variable, formatted \"n (x%)\"","code":""},{"path":[]},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/event_count_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise adverse events by arm and other grouping variables — event_count_by","text":"","code":"event_count_by(   dt = adae[adae$ANL01FL == \"Y\"],   patient = 'USUBJID',   treat = 'ARM',   rows_by = 'AEBODSYS',   target = 'AEDECOD',   .total_dt = adsl,   indent = ' ' ) #>                                                stats  A: Drug X B: Placebo #>                                               <char>     <char>     <char> #>  1:                                           cl B.2                       #>  2:                                    dcd B.2.1.2.1 52 (38.8%) 51 (38.1%) #>  3:                                    dcd B.2.2.3.1 50 (37.3%) 55 (41.0%) #>  4:                           Total number of events        102        106 #>  5: Total number of patients with at least one event 62 (46.3%) 56 (41.8%) #>  6:                                           cl D.1                       #>  7:                                    dcd D.1.1.1.1 52 (38.8%) 40 (29.9%) #>  8:                                    dcd D.1.1.4.2 54 (40.3%) 44 (32.8%) #>  9:                           Total number of events        106         84 #> 10: Total number of patients with at least one event 64 (47.8%) 54 (40.3%) #> 11:                                           cl A.1                       #> 12:                                    dcd A.1.1.1.1 57 (42.5%) 43 (32.1%) #> 13:                                    dcd A.1.1.1.2 58 (43.3%) 56 (41.8%) #> 14:                           Total number of events        115         99 #> 15: Total number of patients with at least one event 68 (50.7%) 58 (43.3%) #> 16:                                           cl D.2                       #> 17:                                    dcd D.2.1.5.3 49 (36.6%) 57 (42.5%) #> 18:                           Total number of events         49         57 #> 19: Total number of patients with at least one event 37 (27.6%) 46 (34.3%) #> 20:                                           cl B.1                       #> 21:                                    dcd B.1.1.1.1 44 (32.8%) 43 (32.1%) #> 22:                           Total number of events         44         43 #> 23: Total number of patients with at least one event 38 (28.4%) 37 (27.6%) #> 24:                                           cl C.2                       #> 25:                                    dcd C.2.1.2.1 39 (29.1%) 40 (29.9%) #> 26:                           Total number of events         39         40 #> 27: Total number of patients with at least one event 28 (20.9%) 36 (26.9%) #> 28:                                           cl C.1                       #> 29:                                    dcd C.1.1.1.3 47 (35.1%) 51 (38.1%) #> 30:                           Total number of events         47         51 #> 31: Total number of patients with at least one event 36 (26.9%) 34 (25.4%) #>                                                stats  A: Drug X B: Placebo #>     C: Combination #>             <char> #>  1:                #>  2:     59 (44.7%) #>  3:     68 (51.5%) #>  4:            127 #>  5:     74 (56.1%) #>  6:                #>  7:     64 (48.5%) #>  8:     50 (37.9%) #>  9:            114 #> 10:     68 (51.5%) #> 11:                #> 12:     74 (56.1%) #> 13:     63 (47.7%) #> 14:            137 #> 15:     76 (57.6%) #> 16:                #> 17:     65 (49.2%) #> 18:             65 #> 19:     50 (37.9%) #> 20:                #> 21:     50 (37.9%) #> 22:             50 #> 23:     36 (27.3%) #> 24:                #> 25:     57 (43.2%) #> 26:             57 #> 27:     48 (36.4%) #> 28:                #> 29:     54 (40.9%) #> 30:             54 #> 31:     36 (27.3%) #>     C: Combination"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/format_n_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Format count(s) and percentage(s) (n (pct%)) — format_n_pct","title":"Format count(s) and percentage(s) (n (pct%)) — format_n_pct","text":"format_n_pct() formats counts (n) respective percentages (pct) \"n (pct%)\".","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/format_n_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format count(s) and percentage(s) (n (pct%)) — format_n_pct","text":"","code":"format_n_pct(n, pct, .pct_digits = 1L)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/format_n_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format count(s) and percentage(s) (n (pct%)) — format_n_pct","text":"n integer vector counts. Length must match pct. pct numeric vector percentages. Length must match n. .pct_digits Number decimal places format percentage values. Defaults 1.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/format_n_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format count(s) and percentage(s) (n (pct%)) — format_n_pct","text":"character vector strings following format \"n (pct%)\".","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/format_n_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format count(s) and percentage(s) (n (pct%)) — format_n_pct","text":"","code":"# Simple cases. format_n_pct(n = 25, pct = 18.66) #> [1] \"25 (18.7%)\" format_n_pct(n = 25, pct = 18.66, .pct_digits = 2) #> [1] \"25 (18.66%)\" format_n_pct(n = 0, pct = 0) #> [1] \"0 (0.0%)\"  # `format_n_pct()` is vectorised over `n` and `pct` but their length must # match. format_n_pct(n = c(20, 50), pct = c(10, 25)) #> [1] \"20 (10.0%)\" \"50 (25.0%)\"  # Missing values result in empty strings in the output. format_n_pct(n = c(20, NA), pct = c(10, 25)) #> [1] \"20 (10.0%)\" \"(25.0%)\"    format_n_pct(n = c(20, 50), pct = c(10, NA)) #> [1] \"20 (10.0%)\" \"50\""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/indent.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indentation to strings — indent","title":"Add indentation to strings — indent","text":"indent() prefixes string sequence HTML non-breaking spaces, effectively work indentation.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/indent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indentation to strings — indent","text":"","code":"indent(x, n = 4L, indentation = nbsp(n = n))"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/indent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indentation to strings — indent","text":"x character vector strings indented. n Number non-breaking spaces use indentation. n = 0 indentation performed. indentation alternative number spaces n may pass actual sequence HTML non-breaking spaces string parameter, string matter. Defaults indentation four spaces (n = 4).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/indent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indentation to strings — indent","text":"character vector length x.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/indent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add indentation to strings — indent","text":"","code":"# Default is to indent by four non-breaking spaces. indent(\"Mean\") #> [1] \"&nbsp;&nbsp;&nbsp;&nbsp;Mean\"  # Choose a different indentation level. indent(\"Mean\", n = 2L) #> [1] \"&nbsp;&nbsp;Mean\"  # `indent()` is vectorised over `x` indent(c(\"Mean\", \"Median\", \"Max, Min\", \"Missing\")) #> [1] \"&nbsp;&nbsp;&nbsp;&nbsp;Mean\"     \"&nbsp;&nbsp;&nbsp;&nbsp;Median\"   #> [3] \"&nbsp;&nbsp;&nbsp;&nbsp;Max, Min\" \"&nbsp;&nbsp;&nbsp;&nbsp;Missing\""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/label.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the label of an object — label","title":"Retrieve the label of an object — label","text":"label() gets attached label object.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the label of an object — label","text":"","code":"label(x)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the label of an object — label","text":"x R object.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the label of an object — label","text":"label attribute (string) associated object passed x NULL label attribute exist.","code":""},{"path":[]},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the label of an object — label","text":"","code":"label(1) #> NULL label(with_label(1, \"my label\")) #> [1] \"my label\""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/merge_table_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge a list of list-wrapped data.tables into one data.table — merge_table_lists","title":"Merge a list of list-wrapped data.tables into one data.table — merge_table_lists","text":"function typically used combine multiple reporting tables, produced event_count(), total_events(), multi_event_true(), single summary table. intermediate tables often returned one-element lists containing data.table.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/merge_table_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge a list of list-wrapped data.tables into one data.table — merge_table_lists","text":"","code":"merge_table_lists(dt_l)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/merge_table_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge a list of list-wrapped data.tables into one data.table — merge_table_lists","text":"dt_l list one-element lists, element list containing single data.table.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/merge_table_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge a list of list-wrapped data.tables into one data.table — merge_table_lists","text":"single merged data.table, row-bound input tables.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/merge_table_lists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge a list of list-wrapped data.tables into one data.table — merge_table_lists","text":"helper unwraps merges , row-wise, produce consolidated safety report table — commonly used clinical study reports data monitoring reviews.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/merge_table_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge a list of list-wrapped data.tables into one data.table — merge_table_lists","text":"","code":"# Count deaths by treatment arm death_table <- event_count(   adsl,   patient = \"USUBJID\",   treat = \"ARM\",   label = \"Total number of deaths\",   .filters = \"DTHFL == 'Y'\" )  # Count study withdrawals due to adverse events withdrawal_table <- event_count(   adsl,   patient = \"USUBJID\",   treat = \"ARM\",   label = \"Total number of patients withdrawn from study due to an AE\",   .filters = \"DCSREAS == 'ADVERSE EVENT'\" )  # Count patients with at least one adverse event patients_with_ae_table <- event_count(   adae,   patient = \"USUBJID\",   treat = \"ARM\",   label = \"Total number of patients with at least one AE\" )  # Count total number of adverse events (not patients) total_ae_events_table <- total_events(   dt = adae,   treat = \"ARM\",   label = \"Total number of AEs\" )  # Summarise AESIs (e.g., serious, related, severe, etc.) aesi_vars <- c(\"FATAL\", \"SER\", \"SERWD\", \"SERDSM\", \"RELSER\",                \"WD\", \"DSM\", \"REL\", \"RELWD\", \"RELDSM\", \"SEV\")  aesi_table <- multi_event_true(   dt = aesi,   event_vars = aesi_vars,   patient = \"USUBJID\",   treat = \"ARM\",   heading = \"Total number of patients with at least one\",   .total_dt = adsl,   indent = \"  \" )  # Combine all safety tables into a single summary table safety_summary <- merge_table_lists(list(   patients_with_ae_table,   total_ae_events_table,   death_table,   withdrawal_table,   aesi_table ))  safety_summary #>                                                          stats   A: Drug X #>                                                         <char>      <char> #>  1:              Total number of patients with at least one AE 122 (20.0%) #>  2:                                        Total number of AEs         609 #>  3:                                     Total number of deaths  25 (18.7%) #>  4: Total number of patients withdrawn from study due to an AE    3 (2.2%) #>  5:                 Total number of patients with at least one             #>  6:                                      AE with fatal outcome    5 (3.7%) #>  7:                                                 Serious AE  85 (63.4%) #>  8:            Serious AE leading to withdrawal from treatment    6 (4.5%) #>  9:       Serious AE leading to dose modification/interruption  36 (26.9%) #> 10:                                         Related Serious AE  64 (47.8%) #> 11:                    AE leading to withdrawal from treatment  20 (14.9%) #> 12:               AE leading to dose modification/interruption  63 (47.0%) #> 13:                                                 Related AE  86 (64.2%) #> 14:            Related AE leading to withdrawal from treatment   10 (7.5%) #> 15:       Related AE leading to dose modification/interruption  44 (32.8%) #> 16:                          Severe AE (at greatest intensity)  77 (57.5%) #>      B: Placebo C: Combination #>          <char>         <char> #>  1: 123 (19.8%)    120 (17.1%) #>  2:         622            703 #>  3:  23 (17.2%)     22 (16.7%) #>  4:    6 (4.5%)       5 (3.8%) #>  5:                            #>  6:    5 (3.7%)       6 (4.5%) #>  7:  80 (59.7%)     87 (65.9%) #>  8:   12 (9.0%)       9 (6.8%) #>  9:  40 (29.9%)     47 (35.6%) #> 10:  52 (38.8%)     64 (48.5%) #> 11:  24 (17.9%)     26 (19.7%) #> 12:  70 (52.2%)     77 (58.3%) #> 13:  85 (63.4%)     92 (69.7%) #> 14:    9 (6.7%)      12 (9.1%) #> 15:  44 (32.8%)     51 (38.6%) #> 16:  70 (52.2%)     79 (59.8%)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/multi_event_true.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise multiple AESI-like events per treatment arm — multi_event_true","title":"Summarise multiple AESI-like events per treatment arm — multi_event_true","text":"multi_event_true() generates summary table showing number percentage patients least one event across multiple binary indicator variables (e.g., flags adverse events special interest).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/multi_event_true.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise multiple AESI-like events per treatment arm — multi_event_true","text":"","code":"multi_event_true(   dt,   event_vars,   patient,   treat,   heading,   label = NULL,   .total_dt = NULL,   indent = nbsp(n = 4L),   pct_dec = 1 )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/multi_event_true.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise multiple AESI-like events per treatment arm — multi_event_true","text":"dt data.frame data.table containing binary event flags subject-level data. event_vars character vector column names (binary flags) summarise. patient string giving name variable uniquely identifies patient (e.g., \"USUBJID\"). treat string giving name treatment variable (e.g., \"ARM\"). heading string shown first row output, usually summary descriptor \"Total number patients least one\". label Optional. character vector length event_vars giving human-readable labels output table rows. NULL, labels extracted label attribute variable, fall back variable name. .total_dt data.frame data.table containing total analysis population (denominator). NULL, dt used denominator. indent string indent row labels (e.g., \"  \" nbsp(n = 4L) non-breaking spaces). pct_dec integer indicating many decimal places show percentages (default 1).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/multi_event_true.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise multiple AESI-like events per treatment arm — multi_event_true","text":"one-element list containing data.table one row per event plus one header row. first column \"stats\" (row labels), subsequent columns one per treatment arm, values \"n (x%)\" format.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/multi_event_true.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise multiple AESI-like events per treatment arm — multi_event_true","text":"event counted per patient. function typically used summarising Adverse Events Special Interest (AESIs) derived flags (e.g., SER, FATAL, RELDSM) binary (TRUE/FALSE).","code":""},{"path":[]},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/multi_event_true.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise multiple AESI-like events per treatment arm — multi_event_true","text":"","code":"aesi_vars <- c(   \"FATAL\", \"SER\", \"SERWD\", \"SERDSM\", \"RELSER\",   \"WD\", \"DSM\", \"REL\", \"RELWD\", \"RELDSM\", \"SEV\" )  heading <- \"Total number of patients with at least one AE\"  multi_event_true(   dt = aesi,   event_vars = aesi_vars,   patient = \"USUBJID\",   treat = \"ARM\",   heading = heading,   .total_dt = adsl,   indent = \"  \" )[[1]] #>                                                      stats  A: Drug X #>                                                     <char>     <char> #>  1:          Total number of patients with at least one AE            #>  2:                                  AE with fatal outcome   5 (3.7%) #>  3:                                             Serious AE 85 (63.4%) #>  4:        Serious AE leading to withdrawal from treatment   6 (4.5%) #>  5:   Serious AE leading to dose modification/interruption 36 (26.9%) #>  6:                                     Related Serious AE 64 (47.8%) #>  7:                AE leading to withdrawal from treatment 20 (14.9%) #>  8:           AE leading to dose modification/interruption 63 (47.0%) #>  9:                                             Related AE 86 (64.2%) #> 10:        Related AE leading to withdrawal from treatment  10 (7.5%) #> 11:   Related AE leading to dose modification/interruption 44 (32.8%) #> 12:                      Severe AE (at greatest intensity) 77 (57.5%) #>     B: Placebo C: Combination #>         <char>         <char> #>  1:                           #>  2:   5 (3.7%)       6 (4.5%) #>  3: 80 (59.7%)     87 (65.9%) #>  4:  12 (9.0%)       9 (6.8%) #>  5: 40 (29.9%)     47 (35.6%) #>  6: 52 (38.8%)     64 (48.5%) #>  7: 24 (17.9%)     26 (19.7%) #>  8: 70 (52.2%)     77 (58.3%) #>  9: 85 (63.4%)     92 (69.7%) #> 10:   9 (6.7%)      12 (9.1%) #> 11: 44 (32.8%)     51 (38.6%) #> 12: 70 (52.2%)     79 (59.8%)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/nbsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Non-Breaking Spaces for HTML Output — nbsp","title":"Generate Non-Breaking Spaces for HTML Output — nbsp","text":"nbsp() generates string HTML non-breaking spaces (&nbsp;).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/nbsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Non-Breaking Spaces for HTML Output — nbsp","text":"","code":"nbsp(n = 1L)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/nbsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Non-Breaking Spaces for HTML Output — nbsp","text":"n Number non-breaking spaces. Defaults 1.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/nbsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Non-Breaking Spaces for HTML Output — nbsp","text":"character string containing n HTML non-breaking spaces (&nbsp;).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/nbsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Non-Breaking Spaces for HTML Output — nbsp","text":"","code":"# One non-breaking space nbsp() #> [1] \"&nbsp;\" nbsp(1) #> [1] \"&nbsp;\"  # Several non-breaking spaces nbsp(n = 2) #> [1] \"&nbsp;&nbsp;\" nbsp(n = 5) #> [1] \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"  # When `n` is zero, an empty string is returned. nbsp(n = 0) #> [1] \"\""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounded percentage — round_pct","title":"Rounded percentage — round_pct","text":"round_pct() returns rounded percentages x values.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounded percentage — round_pct","text":"","code":"round_pct(x, digits = 1L, method = c(\"round\", \"round_sum\"))"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounded percentage — round_pct","text":"x numeric vector non-negative values want percentages determined rounded. Missing values (NA) ignored. digits number decimal places round . Default 0 (integer rounding). method Rounding method: \"round\" uses R's base round() \"round_sum\" uses dtlg::round_sum.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rounded percentage — round_pct","text":"numeric vector length x rounded percentages.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rounded percentage — round_pct","text":"","code":"x <- c(1 / 3, 1 / 3, 1 / 3)  # Default method ensures precise rounding but total might not be 100%. round_pct(x = x) #> [1] 33.3 33.3 33.3 sum(round_pct(x = x)) #> [1] 99.9  # You can trade off rounding precision for precision on the total with the # method `\"round_sum\"`. round_pct(x = x, method = \"round_sum\") #> [1] 33.3 33.3 33.4 sum(round_pct(x = x, method = \"round_sum\")) #> [1] 100  # Vary the number of decimal places, e.g. increase to three. round_pct(x = x, digits = 3, method = \"round_sum\") #> [1] 33.333 33.333 33.334  # Missing values are ignored. x <- c(1, 2, NA) round_pct(x = x, digits = 3) #> [1] 33.333 66.667     NA"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounds numbers while preserving the total sum — round_sum","title":"Rounds numbers while preserving the total sum — round_sum","text":"round_sum() rounds numeric vector non-negative values specified number decimal places ensuring sum rounded value remains close possible original total.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounds numbers while preserving the total sum — round_sum","text":"","code":"round_sum(x, digits = 0L)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounds numbers while preserving the total sum — round_sum","text":"x numeric vector non-negative values want round. Missing values (NA) ignored. digits number decimal places round . Default 0 (integer rounding).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rounds numbers while preserving the total sum — round_sum","text":"numeric vector length x, values rounded way total sum preserved.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/round_sum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rounds numbers while preserving the total sum — round_sum","text":"","code":"# Rounds to integers, preserving the sum of 100. x <- c(33.3333, 33.3333, 33.3334) (y <- round_sum(x)) #> [1] 33 33 34 identical(sum(x), sum(y)) #> [1] TRUE  # Rounds to integers, preserving the sum of 1002. x <- c(100.5, 200.25, 300.75, 400.5) (y <- round_sum(x)) #> [1] 100 200 301 401 identical(sum(x), sum(y)) #> [1] TRUE  # Rounds to one decimal place, preserving the total sum. x <- c(12.345, 67.890, 19.765) (y <- round_sum(x)) #> [1] 12 68 20 identical(sum(x), sum(y)) #> [1] TRUE"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"summary_table wrapper function to create data.table on target variables using calc_stats — summary_table","title":"summary_table wrapper function to create data.table on target variables using calc_stats — summary_table","text":"summary_table wrapper function create data.table target variables using calc_stats","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary_table wrapper function to create data.table on target variables using calc_stats — summary_table","text":"","code":"summary_table(   dt,   target,   treat,   target_name = target,   indent = nbsp(n = 4L),   .total_dt = NULL,   pct_dec = 1,   treat_order = NULL,   skip_absent = TRUE )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary_table wrapper function to create data.table on target variables using calc_stats — summary_table","text":"dt table perform function target vector column names desired obtain information treat string treatment variable used splitting / grouping data target_name names displayed target columns either NULL, uses target, vector desired names target columns indent indent used display formatting purposes .total_dt optional table total counts derived pct_dec decimal places percentages treat_order customise column order output table skip_absent Logical, default TRUE. Passed data.table::setcolorder, treat_order includes columns present dt, TRUE silently ignore , FALSE throw error.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary_table wrapper function to create data.table on target variables using calc_stats — summary_table","text":"data.table containing summary information target variables specified","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summary_table wrapper function to create data.table on target variables using calc_stats — summary_table","text":"","code":"vars<-c('AGE','RACE','ETHNIC','BMRKR1') var_labels <- c(\"Age (yr)\", \"Race\", \"Ethnicity\", \"Continous Level Biomarker 1\") DMT01<-summary_table(adsl, target = vars, treat = 'ARM', target_name = var_labels, indent = '  ') DMT01_pct<-summary_table(adsl, target = vars, treat = 'ARM', indent = '  ', .total_dt = adsl)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary table using multiple rows for grouping on one target column — summary_table_by","title":"Create a summary table using multiple rows for grouping on one target column — summary_table_by","text":"Create summary table using multiple rows grouping one target column","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary table using multiple rows for grouping on one target column — summary_table_by","text":"","code":"summary_table_by(   dt,   target,   treat,   rows_by,   indent = nbsp(n = 4L),   .total_dt = NULL,   pct_dec = 1,   treat_order = NULL,   skip_absent = TRUE )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary table using multiple rows for grouping on one target column — summary_table_by","text":"dt table perform function target vector column names desired obtain information treat string treatment variable used splitting / grouping data rows_by string, grouping variable split events . indent indent used display formatting purposes .total_dt optional table total counts derived pct_dec decimal places percentages treat_order customise column order output table skip_absent Logical, default TRUE. Passed data.table::setcolorder, treat_order includes columns present dt, TRUE silently ignore , FALSE throw error.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary table using multiple rows for grouping on one target column — summary_table_by","text":"list containing data.table containing summary information target variables specified","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary table using multiple rows for grouping on one target column — summary_table_by","text":"","code":"adlb <- random.cdisc.data::cadlb|>dplyr::filter(AVISIT != \"SCREENING\") labs <- summary_table_by(adlb, 'AVAL', 'ARM', c('PARAM','AVISIT'), '  ', NULL)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary table using multiple rows for grouping on two target column ideal for creating change from baseline tables — summary_table_by_targets","title":"Create a summary table using multiple rows for grouping on two target column ideal for creating change from baseline tables — summary_table_by_targets","text":"Create summary table using multiple rows grouping two target column ideal creating change baseline tables","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary table using multiple rows for grouping on two target column ideal for creating change from baseline tables — summary_table_by_targets","text":"","code":"summary_table_by_targets(   dt,   target,   treat,   rows_by,   indent = nbsp(n = 4L),   .total_dt = NULL,   pct_dec = 1,   treat_order = NULL,   skip_absent = TRUE )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary table using multiple rows for grouping on two target column ideal for creating change from baseline tables — summary_table_by_targets","text":"dt table perform function target vector column names desired obtain information treat string treatment variable used splitting / grouping data rows_by string, grouping variable split events . indent indent used display formatting purposes .total_dt optional table total counts derived pct_dec decimal places percentages treat_order customise column order output table skip_absent Logical, default TRUE. Passed data.table::setcolorder, treat_order includes columns present dt, TRUE silently ignore , FALSE throw error.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary table using multiple rows for grouping on two target column ideal for creating change from baseline tables — summary_table_by_targets","text":"data.table","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/summary_table_by_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary table using multiple rows for grouping on two target column ideal for creating change from baseline tables — summary_table_by_targets","text":"","code":"adlb <- random.cdisc.data::cadlb|>dplyr::filter(AVISIT != \"SCREENING\") labs <- summary_table_by_targets(adlb, c('AVAL','CHG'), 'ARM', c('PARAM','AVISIT'), '  ', NULL)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET01_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Core Safety Tables (CSR Section 14.3.1) using tern/rtables — tern_AET01_table","title":"Generate Core Safety Tables (CSR Section 14.3.1) using tern/rtables — tern_AET01_table","text":"tern_AET01_table() produces consolidated safety summary table using rtables tern. mirrors output interface AET01_table(), generating standard adverse event summaries (e.g. death, withdrawal, AESIs) Clinical Study Reports (CSR) Section 14.3.1.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET01_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Core Safety Tables (CSR Section 14.3.1) using tern/rtables — tern_AET01_table","text":"","code":"tern_AET01_table(   adsl,   adae,   patient_var,   treat_var,   aesi_vars,   aesi_heading = \"Total number of patients with at least one\",   indent = \"  \" )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET01_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Core Safety Tables (CSR Section 14.3.1) using tern/rtables — tern_AET01_table","text":"adsl subject-level dataset (typically ADaM ADSL). adae dataset adverse events, preprocessed AESI flags. patient_var string indicating subject identifier variable (e.g., \"USUBJID\"). treat_var string indicating treatment arm variable (e.g., \"ARM\"). aesi_vars character vector binary AESI flags adae. aesi_heading Ignored (included interface compatibility). indent Ignored (included interface compatibility).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET01_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Core Safety Tables (CSR Section 14.3.1) using tern/rtables — tern_AET01_table","text":"TableTree object rtables package.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET01_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Core Safety Tables (CSR Section 14.3.1) using tern/rtables — tern_AET01_table","text":"function returns single formatted rtables table summarising core safety endpoints treatment arm.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET01_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Core Safety Tables (CSR Section 14.3.1) using tern/rtables — tern_AET01_table","text":"","code":"tern_AET01_table(   adsl = adsl,   adae = aesi,   patient_var = \"USUBJID\",   treat_var = \"ARM\",   aesi_vars = c(\"FATAL\", \"SER\", \"SERWD\", \"SERDSM\", \"RELSER\",                 \"WD\", \"DSM\", \"REL\", \"RELWD\", \"RELDSM\", \"SEV\") ) #>                                                               A: Drug X    B: Placebo   C: Combination #>                                                                (N=134)      (N=134)        (N=132)     #> —————————————————————————————————————————————————————————————————————————————————————————————————————— #> Total number of patients with at least one AE                100 (74.6%)   98 (73.1%)    103 (78.0%)   #> Total number of AEs                                              502          480            604       #> Total number of deaths                                       25 (18.7%)    23 (17.2%)     22 (16.7%)   #> Total number of patients withdrawn from study due to an AE    3 (2.2%)      6 (4.5%)       5 (3.8%)    #> Total number of patients with at least one                                                             #>   AE with fatal outcome                                       5 (3.7%)      5 (3.7%)       6 (4.5%)    #>   Serious AE                                                 85 (63.4%)    80 (59.7%)     87 (65.9%)   #>   Serious AE leading to withdrawal from treatment             6 (4.5%)     12 (9.0%)       9 (6.8%)    #>   Serious AE leading to dose modification/interruption       36 (26.9%)    40 (29.9%)     47 (35.6%)   #>   Related Serious AE                                         64 (47.8%)    52 (38.8%)     64 (48.5%)   #>   AE leading to withdrawal from treatment                    20 (14.9%)    24 (17.9%)     26 (19.7%)   #>   AE leading to dose modification/interruption               63 (47.0%)    70 (52.2%)     77 (58.3%)   #>   Related AE                                                 86 (64.2%)    85 (63.4%)     92 (69.7%)   #>   Related AE leading to withdrawal from treatment             10 (7.5%)     9 (6.7%)      12 (9.1%)    #>   Related AE leading to dose modification/interruption       44 (32.8%)    44 (32.8%)     51 (38.6%)   #>   Severe AE (at greatest intensity)                          77 (57.5%)    70 (52.2%)     79 (59.8%)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET02_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate AET02-style AE summary using tern and rtables — tern_AET02_table","title":"Generate AET02-style AE summary using tern and rtables — tern_AET02_table","text":"function builds System Organ Class (SOC) Preferred Term (PT) adverse event summary table, following AET02 CSR format, using tern rtables packages.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET02_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate AET02-style AE summary using tern and rtables — tern_AET02_table","text":"","code":"tern_AET02_table(   adsl,   adae,   patient,   treat,   target = \"AEDECOD\",   rows_by = \"AEBODSYS\",   indent = \"  \" )"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET02_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate AET02-style AE summary using tern and rtables — tern_AET02_table","text":"adsl Subject-level dataset. adae Adverse event dataset. patient Unique subject identifier variable. treat Treatment arm variable. target Preferred term variable (default: \"AEDECOD\"). rows_by Higher-level nesting term (default: \"AEBODSYS\"). indent Ignored (included compatibility).","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_AET02_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate AET02-style AE summary using tern and rtables — tern_AET02_table","text":"TableTree object AE summary SOC/PT.","code":""},{"path":[]},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a clinical reporting table with tern/rtables — tern_summary_table","title":"Create a clinical reporting table with tern/rtables — tern_summary_table","text":"tern_summary_table() convenience wrapper around {rtables} {tern} commands generate clinical reporting summary statistics tables whilst using similar interface summary_table(). can helpful side side comparisons two functions.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a clinical reporting table with tern/rtables — tern_summary_table","text":"","code":"tern_summary_table(dt, target, treat, target_name = target)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a clinical reporting table with tern/rtables — tern_summary_table","text":"dt table perform function target vector column names desired obtain information treat string treatment variable used splitting / grouping data target_name names displayed target columns either NULL, uses target, vector desired names target columns","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a clinical reporting table with tern/rtables — tern_summary_table","text":"data.table containing summary information target variables specified","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/tern_summary_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a clinical reporting table with tern/rtables — tern_summary_table","text":"","code":"vars <- c('AGE', 'RACE', 'ETHNIC', 'BMRKR1') var_labels <- c(\"Age (yr)\", \"Race\", \"Ethnicity\", \"Continous Level Biomarker 1\")  # Summary statistics table split by ARM with custom labels. tern_summary_table(   adsl,   target = vars,   treat = 'ARM',   target_name = var_labels ) #>                                                A: Drug X    B: Placebo    C: Combination #>                                                 (N=134)       (N=134)        (N=132)     #> ———————————————————————————————————————————————————————————————————————————————————————— #> Age (yr)                                                                                 #>   n                                               134           134            132       #>   Mean (SD)                                   33.8 (6.6)    35.4 (7.9)      35.4 (7.7)   #>   Median                                         33.0          35.0            35.0      #>   Min - Max                                   21.0 - 50.0   21.0 - 62.0    20.0 - 69.0   #> Race                                                                                     #>   n                                               134           134            132       #>   ASIAN                                       68 (50.7%)     67 (50%)       73 (55.3%)   #>   BLACK OR AFRICAN AMERICAN                   31 (23.1%)    28 (20.9%)      32 (24.2%)   #>   WHITE                                       27 (20.1%)    26 (19.4%)      21 (15.9%)   #>   AMERICAN INDIAN OR ALASKA NATIVE              8 (6%)       11 (8.2%)       6 (4.5%)    #>   MULTIPLE                                         0         1 (0.7%)           0        #>   NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER        0         1 (0.7%)           0        #>   OTHER                                            0             0              0        #>   UNKNOWN                                          0             0              0        #> Ethnicity                                                                                #>   n                                               134           134            132       #>   HISPANIC OR LATINO                          15 (11.2%)    18 (13.4%)      15 (11.4%)   #>   NOT HISPANIC OR LATINO                      104 (77.6%)   103 (76.9%)    101 (76.5%)   #>   NOT REPORTED                                 6 (4.5%)      10 (7.5%)      11 (8.3%)    #>   UNKNOWN                                      9 (6.7%)      3 (2.2%)        5 (3.8%)    #> Continous Level Biomarker 1                                                              #>   n                                               134           134            132       #>   Mean (SD)                                    6.0 (3.6)     5.7 (3.3)      5.6 (3.5)    #>   Median                                          5.4           4.8            4.6       #>   Min - Max                                   0.4 - 17.7    0.6 - 14.2      0.2 - 21.4"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/total_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Count total events — total_events","title":"Count total events — total_events","text":"total_events() counts number observations dt group defined treat levels. Counts returned wide format, .e. one column per level treat.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/total_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count total events — total_events","text":"","code":"total_events(dt, treat, label)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/total_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count total events — total_events","text":"dt data.frame containing, least, variable indicated treat. treat string indicating grouping variable, e.g. variable specifying treatment population. label string used label output reporting table. text descriptive event counted.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/total_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count total events — total_events","text":"list wrapping one-row data.table 1 + n variables, n number levels treat. First variable stats, character type, whose value argument passed label. Following variables integer type provide counts.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/total_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count total events — total_events","text":"","code":"# In the absence of pre-filtering, `total_events()`, actually, just counts # observations in `dt`. total_events(dt = adsl, treat = \"ARM\", label = \"Subjects\")[[1]] #>       stats A: Drug X B: Placebo C: Combination #>      <char>     <int>      <int>          <int> #> 1: Subjects       134        134            132  # If `dt` is pre-filtered, e.g. with a condition matching an event, then # `total_events()` can be used to (effectively) count events. total_events(dt = adsl[adsl$DTHFL == 'Y'], treat = \"ARM\", label = \"Deaths\")[[1]] #>     stats A: Drug X B: Placebo C: Combination #>    <char>     <int>      <int>          <int> #> 1: Deaths        25         23             22  # Another example using the complement predicate condition. total_events(dt = adsl[adsl$DTHFL == 'N'], treat = \"ARM\", label = \"Lives\")[[1]] #>     stats A: Drug X B: Placebo C: Combination #>    <char>     <int>      <int>          <int> #> 1:  Lives       109        111            110"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/with_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a label attribute to an object — with_label","title":"Add a label attribute to an object — with_label","text":"Add label attribute object","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/with_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a label attribute to an object — with_label","text":"","code":"with_label(x, label)"},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/with_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a label attribute to an object — with_label","text":"x R object. label label provided single string.","code":""},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/with_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a label attribute to an object — with_label","text":"x labeled label.","code":""},{"path":[]},{"path":"https://AscentSoftware.github.io/dtlg/dev/0003-prepping-for-cran/reference/with_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a label attribute to an object — with_label","text":"","code":"label(1) #> NULL label(with_label(1, \"my label\")) #> [1] \"my label\""}]
